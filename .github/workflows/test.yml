name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with: { python-version: '3.10' }
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.cfg') }}-test
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-
            ${{ runner.os }}-python-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install -e .[test]
      - name: Run isort
        run: python -m isort fastapi_jwt --check
      - name: Run flake8
        run: python -m flake8 fastapi_jwt
      - name: Run mypy
        run: python -m mypy fastapi_jwt

  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml', 'setup.cfg') }}-test
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-
            ${{ runner.os }}-python-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install wheel
          python -m pip install -e .[test]
      - name: Test itself
        run: python -m pytest --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: coverage.xml
          flags: unittests # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
